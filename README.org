
** Overview
This is an auto generated comparison from manually filled `*.profiles` for FEA software. It is also available in HTML format ([[https://cdn.rawgit.com/kostyfisik/FEA-compare/7cdaf4c86edf782ebcaec1e26416351f2fc660d4/table.html][preview 1]], [[http://htmlpreview.github.io/?https://github.com/kostyfisik/FEA-compare/blob/master/table.html][preview 2]]) with first row and *Feature* column being fixed for ease of table exploration. Profiles in table are sorted with the number of filled keys.

** Profile format
 Profile is read line-by-line.  Any string before semicolon ':' is treated as a key, the other part till the end of the line as value. Lines without semicolon are ignored, comments should start with hash '#' in the begging of the line.  main-keys.txt file contains keys in order to be listed first, all other keys from all profiles are lister afterwards. Key are always carried with semicolon, table group names are not (for visual ease they are four spaces indented).
Use generate-comparison.py to generate a table from profiles, you will need to install `org-ruby` gem to convert it into HTML format (use `sudo gem install org-ruby` in Ubuntu linux to install this gem). 

**Contribution

Fill free to contribute! There is still a lot of codes, not compared it the table, e.g: NgSolve, CalculiX and SalomÃ© + Code_Aster / Code_Saturne, ANSYS, NASTRAN, CFD-ACE+, COSMOSWORKS. Comsol(R) description is poor. 

|Feature|GetFEM++|Deal II|Elmerfem|FEniCS|Firedrake|libMesh|COMSOL(R)|
|--+--+--+--+--+--+--+--|
|website:|[[http://home.gna.org/getfem/][http://home.gna.org/getfem/]]|[[www.dealii.org][www.dealii.org]]|[[https://www.csc.fi/elmer][https://www.csc.fi/elmer]]|[[http://fenicsproject.org/][http://fenicsproject.org/]]|[[http://firedrakeproject.org/][http://firedrakeproject.org/]]|[[http://libmesh.github.io/][http://libmesh.github.io/]]|[[https://www.comsol.com][https://www.comsol.com]]|
|license:|LGPL|LGPL|GNU (L)GPL|GNU GPL\LGPL|GNU LGPL|GPL|  |
|GUI:|No|No|Yes, partial functionality|Postprocessing only|No|No|Yes|
|Community:|Mailing list|[[https://groups.google.com/forum/#!forum/dealii][Google Group]]|1000's of users, discussion forum, mailing list|Mailing list|Mailing list and IRC channel|[[http://sourceforge.net/p/libmesh/mailman/][mail lists]]|  |
|Documentation:|User doc, tutorials, demos, developper's guide|50+ tutorials, 50+ video lectures, Doxygen|ElmerSolver Manual, Elmer Models Manual, ElmerGUI Tutorials, etc. (>700 pages of LaTeX documentation)|Tutorial, demos (how many?), 700-page book|Manual, demos, API reference|Doxygen, 40+ example codes|  |
| *Mesh* 
|mesh elements:|intervals, triangles, tetrahedra, quads, hexes, prisms, some 4D elements, easily extensible.|intervals (1d), quads (2d), and hexes (3d) only|intervals (1d), triangles, quadrilaterals (2d), tetrahedra, pyramids, wedges, hexahedra (3d)|intervals, triangles, tetrahedra (quads, hexes - work in progress)|intervals, triangles, tetrahedra, quads, plus extruded meshes of hexes and wedges|Tria, Quad, Tetra, Prism, etc.|  |
|mesh high-order mapping:|  |[[http://dealii.org/developer/doxygen/deal.II/step_10.html][any order]]|Yes, for Lagrange elements|(Any - work in progress)|(Any - using appropriate branches)|  |  |
|mesh generation:|Experimental in any dimension + predefined shapes + Extrusion.|external+predefined shapes|Limited own meshing capabilities with ElmerGrid and netgen/tetgen APIs. Internal extrusion and mesh multiplication on parallel level.|Yes, [[http://fenicsproject.org/documentation/dolfin/1.4.0/python/demo/documented/csg-2D/python/documentation.html][Constructive Solid Geometry (CSG)]] supported via mshr (CGAL and Tetgen used as backends)|External + predefined shapes. Internal mesh extrusion operation.|Built-in|Built-in|
|mesh adaptive-refinement:|Only h|h, p, and hp for CG and DG|h-refinement for selected equations|Only h|  |h, p, mached hp, singular hp|  |
|mesh input\output:|gmsh, GiD, Ansys|  |  |XDMF (and FEniCS XML)|  |  |  |
|mesh check:|?|  |  |intersections (collision testing)|  |  |  |
|CAD files support:|No|IGES, STEP (with [[https://dealii.org/developer/doxygen/deal.II/group__OpenCASCADE.html][OpenCascade wrapper]])|Limited support via OpenCASCADE in ElmerGUI|  |  |  |STEP, IGES and [[https://www.comsol.com/cad-import-module][many others]].|
|mesh operation:|Extrude, rotate, translation, refine|  |  |  |  |distort/translate/rotate/scale|  |
| *Parallel possibilities* 
|automatic mesh partitioning:|Yes (METIS)|yes, shared (METIS/Parmetis) and distributed (p4est)|partitioning with ElmerGrid using Metis or geometric division|Yes (ParMETIS and SCOTCH)|Yes|  |  |
|MPI:|Yes|Yes (up to 16k processes), [[http://dealii.org/developer/doxygen/deal.II/step_40.html#Results][test data for 4k processes]]|Yes, demonstrated scalability up to 1000's of cores|Yes, [[http://figshare.com/articles/Parallel_scaling_of_DOLFIN_on_ARCHER/1304537][DOLFIN solver scales up to 24k]]|Yes, [[https://github.com/firedrakeproject/firedrake/wiki/Gravity-wave-scaling][Scaling plot for Firedrake out to 24k cores.]]|Yes|  |
|threads:|  |Threading Build Blocks|threadsafe, limited threading, work in progress|  |  |Yes|  |
|OpenMP:|Yes|Yes (vectorization only)|Yes, partially|  |Limited|  |  |
|OpenCL:|No|No|No|  |  |  |  |
|CUDA:|No|No|No|  |  |  |  |
| *Solver* 
|Dimension:|Any, possibility to mix and couple problem of different dimension|1/2/3D|1D/2D/3D (dimensions may coexist)|1/2/3D|1/2/3D|2D\3D|  |
|FE:|Continuous and discontinuous Lagrange, Hermite, Argyris, Morley, Nedelec, Raviart-Thomas, composite elements (HCT, FVS), Hierarchical elements, Xfem, easily extensible.|Lagrange elements of any order, continuous and discontinuous; Nedelec and Raviart-Thomas elements of any order; BDM and Bernstein; elements composed of other elements.|Lagrange elements, p-elements up to 10th order, Hcurl conforming elements (linear and quadratic) for|Lagrange, BDM, RT, Nedelic, Crouzeix-Raviart, all simplex elements in the Periodic Table (femtable.org), any|Lagrange, BDM, RT, Nedelec, all simplex elements and Q- quad elements in the [[http://femtable.org][Periodic Table]], any|Lagrange, Hierarchic, Discontinuous Monomials|  |
|Predifined equations:|Model bricks: Laplace, linear and nonlinear elasticity, Helmholtz, plasticity, Mindlin and K.L. plates, boundary conditions including contact with friction.|Laplace?|Around 40 predefined solvers|  |  |No|Yes, via modules|
|Automated assembly:|Yes|  |  |Yes|Yes|  |  |
|Visualization:|External or with the Scilab/Matlab/Python interface. Possibility to perform complex slices.|External (export to *.vtk and many others)|ElmerPost, VTK widget (but Paraview is recommended)|Buil-in simple plotting + External|External|No|Built-in|
|Output format:|vtk, gmsh, OpenDX.|*.dx *.ucd *.gnuplot *.povray *.eps *.gmv *.tecplot *.tecplot_binary *.vtk *.vtu *.svg *.hdf5|Several output formats (VTU, gmsh,...)|VTK(.pvd, .vtu) and XDMF/HDF5|VTK(.pvd, .vtu)|  |  |
|Boundary elements solver:|No|[[https://www.dealii.org/developer/doxygen/deal.II/step_34.html][Yes]]|Existing but without multipole acceleration (not usable for large problems)|No|No|  |  |
|Use multiple meshes:|Yes including different dimensions and taking account of any transformation.|[[http://dealii.org/developer/doxygen/deal.II/step_28.html#Meshesandmeshrefinement][Yes, autorefined from same initial mesh for each variable of a coupled problem]]|Continuity of non-conforming interfaces ensured by mortar finite elements|Yes, including non-matching meshes|Yes|  |  |
| *Linear algebra* 
|Used libs:|SuperLU, MUMPS, Built-in.|Built-in + Trilinos, PETSc, and SLEPc|Built-in, Hypre, Trilinos, umfpack, MUMPS, Pardiso, etc. (optional)|PETSc, Trilinos/TPetra, Eigen.|PETSc|PETSc, Trilinos, LASPack,  SLEPc|  |
|Iterative matrix solvers:|All Krylov|All Krylov (CG, Minres, GMRES, BiCGStab, QMRS)|Built-in Krylov solvers, Krylov and multigrid solvers from external libraries|  |  |LASPack serial, PETSc parallel|  |
|Preconditioners:|Basic ones (ILU, ILUT)|Many, including algebraic multigrid (via Hypre and ML) and geometric multigrid|Built-in preconditioners (ILU, diagonal, vanka, block) and|  |  |LASPack serial, PETSc parallel|  |
| *Matrix-free* 
|matrix-free:|No|Yes|Experimental implementation|  |Yes|  |  |
|matrix-free save memory:|No|Yes|  |  |  |  |  |
|matrix-free speed-up:|No|[[https://www.dealii.org/developer/doxygen/deal.II/step_37.html#Comparisonwithasparsematrix][Yes]]|  |  |  |  |  |
| *Used language* 
|Native language:|C++|C++|Fortran (2003 standard)|C++|Python (and generated C)|C++|  |
|Bindings to language:|Python, Scilab or Matlab|No|  |Python|  |  |  |
| *Other* 
|Symbolic derivation of the tangent system for nonlinear problems:|Yes.|  |  |  |  |  |  |
|Coupled nonlinear problems:|Yes|  |  |  |  |  |  |
|Support for fictitious domain methods:|Yes|  |  |  |  |  |  |
|Binary:|Linux (Debian/Ubuntu)|Linux, Windows (work in progress), Mac|Windows, Linux (launchpad: Debian/Ubuntu), Mac (homebrew) (all with MPI)|Linux (Debian\Ubuntu), Mac|No. Automated installers for Linux and Mac|  |  |
|Wilkinson Prize:|  |[[http://www.nag.co.uk/other/WilkinsonPrize.html][2007]]|  |[[http://www.nag.co.uk/other/WilkinsonPrize.html][2015 for dolfin-adjoint]]|  |  |  |
|Testing:|  |[[https://dealii.org/developer/developers/testsuite.html][3500+ tests]]|More than 400 consistency tests ensuring backward compatibility|  |  |  |  |
|fullname:|  |  |Elmer finite element software|  |  |  |  |
