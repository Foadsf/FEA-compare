
** Overview
 This is an [[https://github.com/kostyfisik/FEA-compare][auto generated comparison]] from manually filled `*.profiles` for FEA software. It is also available in HTML format [[https://cdn.rawgit.com/kostyfisik/FEA-compare/c14ce453521151e3a88be3ac066f1596d9dcb11d/table.html][preview 1]] (fast and correct rendering of html table from previous commit), [[http://htmlpreview.github.io/?https://github.com/kostyfisik/FEA-compare/blob/master/table.html][preview 2]] (a bit slow, had problems with Firefox, usually current commit) with first row and *Feature* column being fixed for ease of table exploration. Profiles in table are sorted with the number of filled keys.

** Profile format
 Profile is read line-by-line.  Any string before colon ':' is treated as a key, the other part till the end of the line as value. Lines without colon are ignored, comments should start with hash '#' in the begging of the line.  main-keys.txt file contains keys in order to be listed first, all other keys from all profiles are lister afterwards. Key are always carried with colon, table group names are not (for visual ease they are four spaces indented).
Use generate-comparison.py to generate a table from profiles, you will need to install `org-ruby` gem to convert it into HTML format (use `sudo gem install org-ruby` in Ubuntu linux to install this gem). 

** Contribution
 Fill free to contribute! There is still a lot of codes, not compared it the table, e.g: MFEM, NgSolve, CalculiX and SalomÃ© + Code_Saturne, ANSYS, NASTRAN, CFD-ACE+, COSMOSWORKS. Comsol(R) description is poor. 

|Feature|code_aster|GetFEM++|Deal II|Elmerfem|Range|FEniCS|FEATool Multiphysics|Firedrake|libMesh|COMSOL(R)|
|--+--+--+--+--+--+--+--+--+--+--|
|website:|[[https://www.code-aster.org][https://www.code-aster.org]]|[[http://home.gna.org/getfem/][http://home.gna.org/getfem/]]|[[http://www.dealii.org][http://www.dealii.org]]|[[https://www.csc.fi/elmer][https://www.csc.fi/elmer]]|[[http://www.range-software.com][http://www.range-software.com]]|[[http://fenicsproject.org/][http://fenicsproject.org/]]|[[https://www.featool.com/][https://www.featool.com/]]|[[http://firedrakeproject.org/][http://firedrakeproject.org/]]|[[http://libmesh.github.io/][http://libmesh.github.io/]]|[[https://www.comsol.com][https://www.comsol.com]]|
|license:|GPL|LGPL|LGPL|GNU (L)GPL|GPL|GNU GPL\LGPL|Proprietary|GNU LGPL|GPL|Proprietary|
|GUI:|Yes (Salome-Meca)|No|No|Yes, partial functionality|Yes|Postprocessing only|Matlab and Octave GUI|No|No|Yes|
|Community:|discussion forum, Bitbucket forge|Mailing list|[[https://groups.google.com/forum/#!forum/dealii][Google Group]]|1000's of users, discussion forum, mailing list|GitHub|Mailing list|Mailing list|Mailing list and IRC channel|[[http://sourceforge.net/p/libmesh/mailman/][mail lists]]|  |
|Documentation:|user manual, theory manual, verification manual, developer manual (more than 25000 pages both in French and English with machine translation)|User doc, tutorials, demos, developer's guide|50+ tutorials, 50+ video lectures, Doxygen|ElmerSolver Manual, Elmer Models Manual, ElmerGUI Tutorials, etc. (>700 pages of LaTeX documentation)|user manual, tutorials|Tutorial, demos (how many?), 700-page book|[[https://www.featool.com/doc][Online FEATool documentation]], ~600 pages, ~20 step-by-step tutorials, and 85 m-script model examples|Manual, demos, API reference|Doxygen, 40+ example codes|  |
| *Mesh* 
|mesh elements:|segments (1d), triangles, quadrilaterals (2d), tetrahedra, pyramids, wedges, hexahedra (3d)|intervals, triangles, tetrahedra, quads, hexes, prisms, some 4D elements, easily extensible.|intervals (1d), quads (2d), and hexes (3d) only|intervals (1d), triangles, quadrilaterals (2d), tetrahedra, pyramids, wedges, hexahedra (3d)|points(0d), segments (1d), triangles, quadrilaterals (2d), tetrahedra, hexahedra (3d)|intervals, triangles, tetrahedra (quads, hexes - work in progress)|intervals, triangles, tetrahedra, quads, hexes|intervals, triangles, tetrahedra, quads, plus extruded meshes of hexes and wedges|Tria, Quad, Tetra, Prism, etc.|  |
|mesh high-order mapping:|Quadratic|  |[[http://dealii.org/developer/doxygen/deal.II/step_10.html][any order]]|Yes, for Lagrange elements|  |(Any - work in progress)|  |(Any - using appropriate branches)|  |Any? [[https://www.comsol.com/blogs/keeping-track-of-element-order-in-multiphysics-models/][ Second-order is the default for most cases.]]|
|mesh generation:|Yes (Salome-Meca)|Experimental in any dimension + predefined shapes + Extrusion.|external+predefined shapes|Limited own meshing capabilities with ElmerGrid and netgen/tetgen APIs. Internal extrusion and mesh multiplication on parallel level.|Yes (TetGen)|Yes, [[http://fenicsproject.org/documentation/dolfin/1.4.0/python/demo/documented/csg-2D/python/documentation.html][Constructive Solid Geometry (CSG)]] supported via mshr (CGAL and Tetgen used as backends)|Integrated DistMesh, Gmsh, and Triangle GUI and CLI interfaces|External + predefined shapes. Internal mesh extrusion operation.|Built-in|Built-in|
|mesh adaptive-refinement:|h-refinement|Only h|h, p, and hp for CG and DG|h-refinement for selected equations|  |Only h|  |  |h, p, mached hp, singular hp|generate new mesh with variable density, no(?) p-refinement.|
|mesh input\output:|unv, gmsh, MED, aster|gmsh, GiD, Ansys|  |  |rbm, stl|XDMF (and FEniCS XML)|FeatFlow, FEniCS XML, GiD, Gmsh, GMV, Triangle|  |  |  |
|mesh check:|limited features (double nodes, degenerated elements)|?|  |  |limited features (double nodes, degenerated elements, intersected elements)|intersections (collision testing)|  |  |  |  |
|CAD files support:|Yes (Salome-Meca)|No|IGES, STEP (with [[https://dealii.org/developer/doxygen/deal.II/group__OpenCASCADE.html][OpenCascade wrapper]])|Limited support via OpenCASCADE in ElmerGUI|Yes (stl)|  |  |  |  |STEP, IGES and [[https://www.comsol.com/cad-import-module][many others]].|
|mesh operation:|Yes (Salome-Meca)|Extrude, rotate, translation, refine|  |  |Extrude, rotate, translation, refine|  |Merge, join, extrude, and revolve operations|  |distort/translate/rotate/scale|  |
| *Parallel possibilities* 
|automatic mesh partitioning:|Yes for parallel calculations (PTScotch, ParMetis)|Yes (METIS)|yes, shared (METIS/Parmetis) and distributed (p4est)|partitioning with ElmerGrid using Metis or geometric division|No|Yes (ParMETIS and SCOTCH)|  |Yes|  |  |
|MPI:|Yes|Yes|Yes (up to 147k processes), test for [[http://dealii.org/developer/doxygen/deal.II/step_40.html#Results][4k processes]] and [[https://www.dealii.org/deal85-preprint.pdf][geometric multigrid for 147k, strong and weak scaling]]|Yes, demonstrated scalability up to 1000's of cores|No|Yes, [[http://figshare.com/articles/Parallel_scaling_of_DOLFIN_on_ARCHER/1304537][DOLFIN solver scales up to 24k]]|  |Yes, [[https://github.com/firedrakeproject/firedrake/wiki/Gravity-wave-scaling][Scaling plot for Firedrake out to 24k cores.]]|Yes|Almost ideal for parameter sweep? For large scale simulations  Comsol 4.2 [[https://www.comsol.ru/paper/download/83777/pepper_presentation.pdf][bench by Pepper]] has 19.2 speedup on 24 core cluster (0.8 efficiency).|
|threads:|Yes|  |Threading Build Blocks|threadsafe, limited threading, work in progress|Yes|  |  |  |Yes|  |
|OpenMP:|Yes|Yes|Yes (vectorization only)|Yes, partially|Yes|  |  |Limited|  |  |
|OpenCL:|No|No|No|No|No|  |  |  |  |  |
|CUDA:|No|No|work in progress|No|No|  |  |  |  |  |
| *Solver* 
|Dimension:|0D/1D/2D/3D (dimensions may coexist)|Any, possibility to mix and couple problem of different dimension|1/2/3D|1D/2D/3D (dimensions may coexist)|0D/1D/2D/3D (dimensions may coexist)|1/2/3D|1/2/3D|1/2/3D|2D\3D|  |
|FE:|Lagrange elements (isoparametric), mixed elements, structural mechanics elements (beam, plate)|Continuous and discontinuous Lagrange, Hermite, Argyris, Morley, Nedelec, Raviart-Thomas, composite elements (HCT, FVS), Hierarchical elements, Xfem, easily extensible.|Lagrange elements of any order, continuous and discontinuous; Nedelec and Raviart-Thomas elements of any order; BDM and Bernstein; elements composed of other elements.|Lagrange elements, p-elements up to 10th order, Hcurl conforming elements (linear and quadratic) for|Lagrange elements|Lagrange, BDM, RT, Nedelic, Crouzeix-Raviart, all simplex elements in the Periodic Table (femtable.org), any|Lagrange (1st-5th order), Crouzeix-Raviart, Hermite|Lagrange, BDM, RT, Nedelec, all simplex elements and Q- quad elements in the [[http://femtable.org][Periodic Table]], any|Lagrange, Hierarchic, Discontinuous Monomials|in Wave Optics Module: frequency domain and trainsient UI - 1,2, and 3 order; time explicit UI - 1,2,3, and 4 order;|
|Quadrature:|depending on the type of element (Gauss, Newton-Cotes, etc)|  |Gauss-Legendre, Gauss-Lobatto, midpoint, trapezoidal,  Simpson, Milne and Weddle (closed Newton-Cotes for 4 and 7 order polinomials), Gauss quadrature with logarithmic or 1/R weighting function, Telles quadrature of arbitrary order.|  |  |  |  |  |Gauss-Legendre (1D and tensor product rules in 2D and 3D) tabulated up to 44th-order to high precision, best available rules for triangles and tetrahedra to very high order, best available monomial rules for quadrilaterals and hexahedra.|  |
|Transient problems:|Yes|  |Any user implemented and/or from a set of predifined. Explicit methods: forward Euler, 3rd and 4th order Runge-Kutta. Implicit methods: backward Euler, implicit Midpoint, Crank-Nicolson, SDIRK. Embedded explicit methods: Heun-Euler, Bogacki-Shampine, Dopri, Fehlberg, Cash-Karp.|  |Yes|  |BE, CN, and Fractional-Step-Theta schemes|  |  |(?) assume 2nd order leapfrog for wave optics?|
|Predifined equations:|Yes (mechanics, thermics, acoustics)|  |Laplace?|Around 40 predefined solvers|Yes (Incompressible Navier-Stokes, Heat transfer (convection-conduction-radiation), Stress analysis, Soft body dynamics, Modal analysis, Electrostatics, Magnetostatics )|  |Incompressible Navier-Stokes, Heat transfer, convection-diffusion-reaction, linear elasticity, electromagnetics, Darcy's, Brinkman equations, and support for custom PDE equations|  |No|Yes, via modules|
|Automated assembly:|Yes|Yes|  |  |Yes|Yes|Yes|Yes|  |  |
|Visualization:|Paraview (Salome-Meca)|External or with the Scilab/Matlab/Python interface. Possibility to perform complex slices.|External (export to *.vtk and many others)|ElmerPost, VTK widget (but Paraview is recommended)|GUI (built-in)|Buil-in simple plotting + External|Built-in with optional Plotly and GMV export|External|No|Built-in|
|Output format:|MED, ASCII|vtk, gmsh, OpenDX.|*.dx *.ucd *.gnuplot *.povray *.eps *.gmv *.tecplot *.tecplot_binary *.vtk *.vtu *.svg *.hdf5|Several output formats (VTU, gmsh,...)|  |VTK(.pvd, .vtu) and XDMF/HDF5|GMV and Plotly|VTK(.pvd, .vtu)|  |  |
|Boundary elements solver:|Yes for Soil-Structure Interaction (Miss3D)|No|[[https://www.dealii.org/developer/doxygen/deal.II/step_34.html][Yes]]|Existing but without multipole acceleration (not usable for large problems)|  |No|  |No|  |  |
|Use multiple meshes:|Yes|Yes including different dimensions and taking account of any transformation.|[[http://dealii.org/developer/doxygen/deal.II/step_28.html#Meshesandmeshrefinement][Yes, autorefined from same initial mesh for each variable of a coupled problem]]|Continuity of non-conforming interfaces ensured by mortar finite elements|  |Yes, including non-matching meshes|  |Yes|  |  |
| *Linear algebra* 
|Used libs:|BLAS/LAPACK, MUMPS (and SCALAPACK), PETSc|SuperLU, MUMPS, Built-in.|Built-in + Trilinos, PETSc, and SLEPc|Built-in, Hypre, Trilinos, umfpack, MUMPS, Pardiso, etc. (optional)|No|PETSc, Trilinos/TPetra, Eigen.|Matlab/Octave built-in (Umfpack), supports integration with the FEniCS and FeatFlow solvers|PETSc|PETSc, Trilinos, LASPack,  SLEPc|  |
|Iterative matrix solvers:|GMRES, CG, GCR, CR, FGMRES (via PETSc)|All Krylov|All Krylov (CG, Minres, GMRES, BiCGStab, QMRS)|Built-in Krylov solvers, Krylov and multigrid solvers from external libraries|GMRES, CG|  |Matlab/Octave built-in|  |LASPack serial, PETSc parallel|  |
|Preconditioners:|ILU, Jacobi, Simple Precision Preconditioner (via MUMPS)|Basic ones (ILU, ILUT)|Many, including algebraic multigrid (via Hypre and ML) and geometric multigrid|Built-in preconditioners (ILU, diagonal, vanka, block) and|ILU, Jacobi|  |Matlab/Octave built-in|  |LASPack serial, PETSc parallel|  |
| *Matrix-free* 
|matrix-free:|No|No|Yes|Experimental implementation|No|  |  |Yes|  |  |
|matrix-free save memory:|No|No|Yes|  |No|  |  |  |  |  |
|matrix-free speed-up:|No|No|[[https://www.dealii.org/developer/doxygen/deal.II/step_37.html#Comparisonwithasparsematrix][Yes]]|  |No|  |  |  |  |  |
| *Used language* 
|Native language:|Fortran 90, Python|C++|C++|Fortran (2003 standard)|C++|C++|Matlab / Octave|Python (and generated C)|C++|  |
|Bindings to language:|Python|Python, Scilab or Matlab|No|  |No|Python|  |  |  |  |
| *Other* 
|Predefined equations:|linear quasistatics, linear thermics, non-linear quasistatics, non-linear dynamics, eigen problem for mechanics, linear dynamics on physical basis and modal basis, harmonic analysis, spectral analysis|Model bricks: Laplace, linear and nonlinear elasticity, Helmholtz, plasticity, Mindlin and K.L. plates, boundary conditions including contact with friction.|  |  |  |  |  |  |  |  |
|Coupled nonlinear problems:|thermo-hydro-mechanical problem for porous media, coupling with Code_Saturne CFD software for Fluid-Structure Interaction via SALOME platform|Yes|  |  |  |  |  |  |  |  |
|Binary:|Yes for Salome-Meca (Linux)|Linux (Debian/Ubuntu)|Linux, Windows (work in progress), Mac|Windows, Linux (launchpad: Debian/Ubuntu), Mac (homebrew) (all with MPI)|  |Linux (Debian\Ubuntu), Mac|Windows, Linux, Mac|No. Automated installers for Linux and Mac|  |  |
|fullname:|Analyse des Structures et Thermo-mÃ©canique pour des Ãtudes et des Recherches (ASTER)|  |  |Elmer finite element software|  |  |  |  |  |  |
|Testing:|More than 3500 verification testcases covering all features and providing easy starting points for beginners|  |[[https://dealii.org/developer/developers/testsuite.html][3500+ tests]]|More than 400 consistency tests ensuring backward compatibility|  |  |  |  |  |  |
|Symbolic derivation of the tangent system for nonlinear problems:|  |Yes|  |  |  |  |  |  |  |  |
|Support for fictitious domain methods:|  |Yes|  |  |  |  |  |  |  |  |
|Wilkinson Prize:|  |  |[[http://www.nag.co.uk/other/WilkinsonPrize.html][2007]]|  |  |[[http://www.nag.co.uk/other/WilkinsonPrize.html][2015 for dolfin-adjoint]]|  |  |  |  |
|scripting:|  |  |  |  |  |  |Fully scriptable in as m-file Matlab scripts and the GUI supports exporting models in script format|  |  |  |
|multiphysics:|  |  |  |  |  |  |Arbitrary multiphysics couplings are supported|  |  |  |
|Optimization Solvers:|  |  |  |  |  |  |  |  |Support for TAO- and nlopt-based constrained optimization solvers incorporating gradient and Hessian information.|  |
